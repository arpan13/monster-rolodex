{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFeild","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6UAIaA,G,YAAK,SAACC,GAAD,OACd,yBAAKC,UAAU,kBACd,yBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACnB,4BACKL,EAAMI,QAAQE,MAEnB,2BAAIN,EAAMI,QAAQG,UCLdC,EAAU,SAAAR,GAAK,OACxB,yBAAKC,UAAU,aACVD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCL/BQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,2BACAb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BCG,G,wDAhCZ,aAAc,IAAD,8BACX,gBAaFH,aAAa,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbnC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IAJH,E,gEASO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,+BAK/B,IAAD,EACwBC,KAAKN,MAA5Bd,EADD,EACCA,SAASW,EADV,EACUA,YACVU,EAAgBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC3CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAClD,OACE,yBAAK/B,UAAU,OACX,+CACD,kBAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,kBAAC,EAAD,CAAUL,SAAUqB,S,GA1BXI,cCAlBC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68d62c2d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.styles.css\"\r\n\r\nexport const Card=(props)=>(\r\n    <div className=\"card-container\">\r\n     <img alt=\"Monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} ></img>\r\n         <h2>\r\n             {props.monster.name}\r\n         </h2>\r\n         <p>{props.monster.email}</p>\r\n\r\n    </div>\r\n)","import React from \"react\";\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\nexport const CardList =props=>(\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster=>( \r\n            <Card key={monster.id} monster={monster} />\r\n            \r\n         ) )}\r\n      </div>\r\n);\r\n\r\n    \r\n    \r\n     \r\n\r\n","import React, { Component } from 'react';\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=>(\r\n    <input \r\n    className=\"search\"\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}></input>\r\n)\r\n//e=>this.setState({searchFeild:e.target.value})\r\n\r\n","import React, { Component } from 'react';\nimport {CardList} from \"./components/card-list/card-list.component.jsx\"\nimport {SearchBox} from \"./components/search/search.component.jsx\"\n\nimport './App.css';\n\nclass App extends Component {\n   constructor(){\n     super();\n     this.state={\n       monsters:[],\n       searchFeild:\"\"\n     };\n    \n   }\n\n   componentDidMount(){\n     fetch(\"https://jsonplaceholder.typicode.com/users\")\n     .then(response=>response.json())\n     .then(users=>this.setState({monsters:users}))\n   }\n   handleChange=(e) => {\n    this.setState({searchFeild:e.target.value})\n   }\n  render(){\n    const {monsters,searchFeild} =this.state;\n    const filteredMonster=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n    return (\n      <div className=\"App\">\n          <h1>Monster Rolodex</h1>  \n         <SearchBox placeholder=\"Search monsters\" handleChange={this.handleChange} />\n         <CardList monsters={filteredMonster}/>\n       </div>\n    );\n  }\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}